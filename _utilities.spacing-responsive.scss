/*------------------------------------*\
    #SPACING-RESPONSIVE
\*------------------------------------*/

/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.u-(m|p)(t|r|b|l|h|v)(-negative)(-tiny|-small|-large|-huge|-none)(@breakpoint) {}`
 * = margin/padding top/right/bottom/left/horizontal/vertical negative tiny/small/large/huge/none @breakpoint
 *
	<div class="u-mr u-mb-small u-mb@s"></div>
 */

// Predefine the variables below in order to alter and enable specific features.
$u-m-responsive:                  false !default;
$u-m-responsive-tiny:             false !default;
$u-m-responsive-small:            false !default;
$u-m-responsive-large:            false !default;
$u-m-responsive-huge:             false !default;

$u-m-responsive-negative:         false !default;
$u-m-responsive-negative-tiny:    false !default;
$u-m-responsive-negative-small:   false !default;
$u-m-responsive-negative-large:   false !default;
$u-m-responsive-negative-huge:    false !default;

$u-m-responsive-none:             false !default;

$u-p-responsive:                  false !default;
$u-p-responsive-tiny:             false !default;
$u-p-responsive-small:            false !default;
$u-p-responsive-large:            false !default;
$u-p-responsive-huge:             false !default;

$u-p-responsive-none:             false !default;





// Internally used mixin to quickly generate our different variants based upon
// the breakpoints defined in `settings.responsive`.

@mixin aleut-generate-spacing() {

    // Loop through our previously-defined breakpoints.
    @each $breakpoint in $breakpoints {

        $generate-spacing-alias:      nth($breakpoint, 1) !global;
        $generate-spacing-condition:  nth($breakpoint, 2);

        // This isn’t ideal, but we definitely don’t want to generate widths
        // for retina devices. Exclude retina media-qeuries manually.
        @if ($generate-spacing-alias != "retina") {

            @include media-query($generate-spacing-alias) {
                @content;
            } // Close media query.

        } // Close retina check.

        // Take the global variable back out of scope.
        $generate-spacing-alias: null !global;

    } // Close breakpoints loop.

}





@if ($u-m-responsive == true) {

    /**
     * Margin helper classes.
     *
     * Add margins.
     */

    @include aleut-generate-spacing() {

        .u-m\@#{$generate-spacing-alias}      { margin:           $margin !important; }
        .u-mt\@#{$generate-spacing-alias}     { margin-top:       $margin !important; }
        .u-mr\@#{$generate-spacing-alias}     { margin-right:     $margin !important; }
        .u-mb\@#{$generate-spacing-alias}     { margin-bottom:    $margin !important; }
        .u-ml\@#{$generate-spacing-alias}     { margin-left:      $margin !important; }
        .u-mh\@#{$generate-spacing-alias}     { margin-right:     $margin !important; margin-left:      $margin !important; }
        .u-mv\@#{$generate-spacing-alias}     { margin-top:       $margin !important; margin-bottom:    $margin !important; }

    }

}


@if ($u-m-responsive-tiny == true) {

    /**
     * Add tiny margins.
     */

    @include aleut-generate-spacing() {

        .u-m-tiny\@#{$generate-spacing-alias}     { margin:           $margin--tiny !important; }
        .u-mt-tiny\@#{$generate-spacing-alias}    { margin-top:       $margin--tiny !important; }
        .u-mr-tiny\@#{$generate-spacing-alias}    { margin-right:     $margin--tiny !important; }
        .u-mb-tiny\@#{$generate-spacing-alias}    { margin-bottom:    $margin--tiny !important; }
        .u-ml-tiny\@#{$generate-spacing-alias}    { margin-left:      $margin--tiny !important; }
        .u-mh-tiny\@#{$generate-spacing-alias}    { margin-right:     $margin--tiny !important; margin-left:     $margin--tiny !important; }
        .u-mv-tiny\@#{$generate-spacing-alias}    { margin-top:       $margin--tiny !important; margin-bottom:   $margin--tiny !important; }

    }

}


@if ($u-m-responsive-small == true) {

    /**
     * Add small margins.
     */

    @include aleut-generate-spacing() {

        .u-m-small\@#{$generate-spacing-alias}      { margin:           $margin--small !important; }
        .u-mt-small\@#{$generate-spacing-alias}     { margin-top:       $margin--small !important; }
        .u-mr-small\@#{$generate-spacing-alias}     { margin-right:     $margin--small !important; }
        .u-mb-small\@#{$generate-spacing-alias}     { margin-bottom:    $margin--small !important; }
        .u-ml-small\@#{$generate-spacing-alias}     { margin-left:      $margin--small !important; }
        .u-mh-small\@#{$generate-spacing-alias}     { margin-right:     $margin--small !important; margin-left:   $margin--small !important; }
        .u-mv-small\@#{$generate-spacing-alias}     { margin-top:       $margin--small !important; margin-bottom: $margin--small !important; }

    }

}


@if ($u-m-responsive-large == true) {

    /**
     * Add large margins.
     */

    @include aleut-generate-spacing() {

        .u-m-large\@#{$generate-spacing-alias}     { margin:           $margin--large !important; }
        .u-mt-large\@#{$generate-spacing-alias}    { margin-top:       $margin--large !important; }
        .u-mr-large\@#{$generate-spacing-alias}    { margin-right:     $margin--large !important; }
        .u-mb-large\@#{$generate-spacing-alias}    { margin-bottom:    $margin--large !important; }
        .u-ml-large\@#{$generate-spacing-alias}    { margin-left:      $margin--large !important; }
        .u-mh-large\@#{$generate-spacing-alias}    { margin-right:     $margin--large !important; margin-left:      $margin--large !important; }
        .u-mv-large\@#{$generate-spacing-alias}    { margin-top:       $margin--large !important; margin-bottom:    $margin--large !important; }

    }

}


@if ($u-m-responsive-huge == true) {

    /**
     * Add huge margins.
     */

    @include aleut-generate-spacing() {

        .u-m-huge\@#{$generate-spacing-alias}   { margin:           $margin--huge !important; }
        .u-mt-huge\@#{$generate-spacing-alias}  { margin-top:       $margin--huge !important; }
        .u-mr-huge\@#{$generate-spacing-alias}  { margin-right:     $margin--huge !important; }
        .u-mb-huge\@#{$generate-spacing-alias}  { margin-bottom:    $margin--huge !important; }
        .u-ml-huge\@#{$generate-spacing-alias}  { margin-left:      $margin--huge !important; }
        .u-mh-huge\@#{$generate-spacing-alias}  { margin-right:     $margin--huge !important; margin-left:   $margin--huge !important; }
        .u-mv-huge\@#{$generate-spacing-alias}  { margin-top:       $margin--huge !important; margin-bottom: $margin--huge !important; }

    }

}


@if ($u-m-responsive-none == true) {

    /**
     * Remove margins.
     */

    @include aleut-generate-spacing() {

        .u-m-none\@#{$generate-spacing-alias}      { margin:           0 !important; }
        .u-mt-none\@#{$generate-spacing-alias}     { margin-top:       0 !important; }
        .u-mr-none\@#{$generate-spacing-alias}     { margin-right:     0 !important; }
        .u-mb-none\@#{$generate-spacing-alias}     { margin-bottom:    0 !important; }
        .u-ml-none\@#{$generate-spacing-alias}     { margin-left:      0 !important; }
        .u-mh-none\@#{$generate-spacing-alias}     { margin-right:     0 !important; margin-left:      0 !important; }
        .u-mv-none\@#{$generate-spacing-alias}     { margin-top:       0 !important; margin-bottom:    0 !important; }

    }

}


@if ($u-m-responsive-negative == true) {

    /**
     * Negative margins.
     */

    @include aleut-generate-spacing() {

        .u-m-negative\@#{$generate-spacing-alias}      { margin:           -$margin !important; }
        .u-mt-negative\@#{$generate-spacing-alias}     { margin-top:       -$margin !important; }
        .u-mr-negative\@#{$generate-spacing-alias}     { margin-right:     -$margin !important; }
        .u-mb-negative\@#{$generate-spacing-alias}     { margin-bottom:    -$margin !important; }
        .u-ml-negative\@#{$generate-spacing-alias}     { margin-left:      -$margin !important; }
        .u-mh-negative\@#{$generate-spacing-alias}     { margin-right:     -$margin !important; margin-left:      -$margin !important; }
        .u-mv-negative\@#{$generate-spacing-alias}     { margin-top:       -$margin !important; margin-bottom:    -$margin !important; }

    }

}


@if ($u-m-responsive-negative-tiny == true) {

    /**
     * Tiny negative margins.
     */

    @include aleut-generate-spacing() {

        .u-m-negative-tiny\@#{$generate-spacing-alias}    { margin:           -$margin--tiny !important; }
        .u-mt-negative-tiny\@#{$generate-spacing-alias}   { margin-top:       -$margin--tiny !important; }
        .u-mr-negative-tiny\@#{$generate-spacing-alias}   { margin-right:     -$margin--tiny !important; }
        .u-mb-negative-tiny\@#{$generate-spacing-alias}   { margin-bottom:    -$margin--tiny !important; }
        .u-ml-negative-tiny\@#{$generate-spacing-alias}   { margin-left:      -$margin--tiny !important; }
        .u-mh-negative-tiny\@#{$generate-spacing-alias}   { margin-right:     -$margin--tiny !important; margin-left:     -$margin--tiny !important; }
        .u-mv-negative-tiny\@#{$generate-spacing-alias}   { margin-top:       -$margin--tiny !important; margin-bottom:   -$margin--tiny !important; }

    }

}


@if ($u-m-responsive-negative-small == true) {

    /**
     * Small negative margins.
     */

    @include aleut-generate-spacing() {

        .u-m-negative-small\@#{$generate-spacing-alias}     { margin:           -$margin--small !important; }
        .u-mt-negative-small\@#{$generate-spacing-alias}    { margin-top:       -$margin--small !important; }
        .u-mr-negative-small\@#{$generate-spacing-alias}    { margin-right:     -$margin--small !important; }
        .u-mb-negative-small\@#{$generate-spacing-alias}    { margin-bottom:    -$margin--small !important; }
        .u-ml-negative-small\@#{$generate-spacing-alias}    { margin-left:      -$margin--small !important; }
        .u-mh-negative-small\@#{$generate-spacing-alias}    { margin-right:     -$margin--small !important; margin-left:   -$margin--small !important; }
        .u-mv-negative-small\@#{$generate-spacing-alias}    { margin-top:       -$margin--small !important; margin-bottom: -$margin--small !important; }

    }

}


@if ($u-m-responsive-negative-large == true) {

    /**
     * Large negative margins.
     */

    @include aleut-generate-spacing() {

        .u-m-negative-large\@#{$generate-spacing-alias}    { margin:           double(-$margin) !important; }
        .u-mt-negative-large\@#{$generate-spacing-alias}   { margin-top:       double(-$margin) !important; }
        .u-mr-negative-large\@#{$generate-spacing-alias}   { margin-right:     double(-$margin) !important; }
        .u-mb-negative-large\@#{$generate-spacing-alias}   { margin-bottom:    double(-$margin) !important; }
        .u-ml-negative-large\@#{$generate-spacing-alias}   { margin-left:      double(-$margin) !important; }
        .u-mh-negative-large\@#{$generate-spacing-alias}   { margin-right:     double(-$margin) !important; margin-left:      double(-$margin) !important; }
        .u-mv-negative-large\@#{$generate-spacing-alias}   { margin-top:       double(-$margin) !important; margin-bottom:    double(-$margin) !important; }

    }

}


@if ($u-m-responsive-negative-huge == true) {

    /**
     * Huge negative margins.
     */

    @include aleut-generate-spacing() {

        .u-m-negative-huge\@#{$generate-spacing-alias}  { margin:           quadruple(-$margin) !important; }
        .u-mt-negative-huge\@#{$generate-spacing-alias} { margin-top:       quadruple(-$margin) !important; }
        .u-mr-negative-huge\@#{$generate-spacing-alias} { margin-right:     quadruple(-$margin) !important; }
        .u-mb-negative-huge\@#{$generate-spacing-alias} { margin-bottom:    quadruple(-$margin) !important; }
        .u-ml-negative-huge\@#{$generate-spacing-alias} { margin-left:      quadruple(-$margin) !important; }
        .u-mh-negative-huge\@#{$generate-spacing-alias} { margin-right:     quadruple(-$margin) !important; margin-left:   quadruple(-$margin) !important; }
        .u-mv-negative-huge\@#{$generate-spacing-alias} { margin-top:       quadruple(-$margin) !important; margin-bottom: quadruple(-$margin) !important; }

    }

}





@if ($u-p-responsive == true) {

    /**
     * Padding helper classes.
     *
     * Add paddings.
     */

    @include aleut-generate-spacing() {

        .u-p\@#{$generate-spacing-alias}       { padding:          $padding !important; }
        .u-pt\@#{$generate-spacing-alias}      { padding-top:      $padding !important; }
        .u-pr\@#{$generate-spacing-alias}      { padding-right:    $padding !important; }
        .u-pb\@#{$generate-spacing-alias}      { padding-bottom:   $padding !important; }
        .u-pl\@#{$generate-spacing-alias}      { padding-left:     $padding !important; }
        .u-ph\@#{$generate-spacing-alias}      { padding-right:    $padding !important; padding-left:    $padding !important; }
        .u-pv\@#{$generate-spacing-alias}      { padding-top:      $padding !important; padding-bottom:  $padding !important; }

    }

}


@if ($u-p-responsive-tiny == true) {

    /**
     * Add tiny paddings.
     */

    @include aleut-generate-spacing() {

        .u-p-tiny\@#{$generate-spacing-alias}     { padding:           $padding--tiny !important; }
        .u-pt-tiny\@#{$generate-spacing-alias}    { padding-top:       $padding--tiny !important; }
        .u-pr-tiny\@#{$generate-spacing-alias}    { padding-right:     $padding--tiny !important; }
        .u-pb-tiny\@#{$generate-spacing-alias}    { padding-bottom:    $padding--tiny !important; }
        .u-pl-tiny\@#{$generate-spacing-alias}    { padding-left:      $padding--tiny !important; }
        .u-ph-tiny\@#{$generate-spacing-alias}    { padding-right:     $padding--tiny !important; padding-left:      $padding--tiny !important; }
        .u-pv-tiny\@#{$generate-spacing-alias}    { padding-top:       $padding--tiny !important; padding-bottom:    $padding--tiny !important; }

    }

}


@if ($u-p-responsive-small == true) {

    /**
     * Add small paddings.
     */

    @include aleut-generate-spacing() {

        .u-p-small\@#{$generate-spacing-alias}      { padding:           $padding--small !important; }
        .u-pt-small\@#{$generate-spacing-alias}     { padding-top:       $padding--small !important; }
        .u-pr-small\@#{$generate-spacing-alias}     { padding-right:     $padding--small !important; }
        .u-pb-small\@#{$generate-spacing-alias}     { padding-bottom:    $padding--small !important; }
        .u-pl-small\@#{$generate-spacing-alias}     { padding-left:      $padding--small !important; }
        .u-ph-small\@#{$generate-spacing-alias}     { padding-right:     $padding--small !important; padding-left:    $padding--small !important; }
        .u-pv-small\@#{$generate-spacing-alias}     { padding-top:       $padding--small !important; padding-bottom:  $padding--small !important; }

    }

}


@if ($u-p-responsive-large == true) {

    /**
     * Add large paddings.
     */

    @include aleut-generate-spacing() {

        .u-p-large\@#{$generate-spacing-alias}     { padding:           $padding--large !important; }
        .u-pt-large\@#{$generate-spacing-alias}    { padding-top:       $padding--large !important; }
        .u-pr-large\@#{$generate-spacing-alias}    { padding-right:     $padding--large !important; }
        .u-pb-large\@#{$generate-spacing-alias}    { padding-bottom:    $padding--large !important; }
        .u-pl-large\@#{$generate-spacing-alias}    { padding-left:      $padding--large !important; }
        .u-ph-large\@#{$generate-spacing-alias}    { padding-right:     $padding--large !important; padding-left:   $padding--large !important; }
        .u-pv-large\@#{$generate-spacing-alias}    { padding-top:       $padding--large !important; padding-bottom: $padding--large !important; }

    }

}


@if ($u-p-responsive-huge == true) {

    /**
     * Add huge paddings.
     */

    @include aleut-generate-spacing() {

        .u-p-huge\@#{$generate-spacing-alias}   { padding:           $padding--huge !important; }
        .u-pt-huge\@#{$generate-spacing-alias}  { padding-top:       $padding--huge !important; }
        .u-pr-huge\@#{$generate-spacing-alias}  { padding-right:     $padding--huge !important; }
        .u-pb-huge\@#{$generate-spacing-alias}  { padding-bottom:    $padding--huge !important; }
        .u-pl-huge\@#{$generate-spacing-alias}  { padding-left:      $padding--huge !important; }
        .u-ph-huge\@#{$generate-spacing-alias}  { padding-right:     $padding--huge !important; padding-left:    $padding--huge !important; }
        .u-pv-huge\@#{$generate-spacing-alias}  { padding-top:       $padding--huge !important; padding-bottom:  $padding--huge !important; }

    }

}


@if ($u-p-responsive-none == true) {

    /**
     * Remove paddings.
     */

    @include aleut-generate-spacing() {

        .u-p-none\@#{$generate-spacing-alias}      { padding:          0 !important; }
        .u-pt-none\@#{$generate-spacing-alias}     { padding-top:      0 !important; }
        .u-pr-none\@#{$generate-spacing-alias}     { padding-right:    0 !important; }
        .u-pb-none\@#{$generate-spacing-alias}     { padding-bottom:   0 !important; }
        .u-pl-none\@#{$generate-spacing-alias}     { padding-left:     0 !important; }
        .u-ph-none\@#{$generate-spacing-alias}     { padding-right:    0 !important; padding-left:     0 !important; }
        .u-pv-none\@#{$generate-spacing-alias}     { padding-top:      0 !important; padding-bottom:   0 !important; }

    }

}
